--Transakcja 1
CONNECT usr/pwd@//localhost:1521/pdb;
--1. Pokaż wszystkie niewypożyczone samochody
SELECT * FROM CAR WHERE AVAILABLE='true';
--2. Dodaj samochód stacji
UPDATE CAR SET CAR_STATION_ID=1 WHERE ID=1;
--3. Pokaż samochody z przebiegiem większym niż zadany
SELECT * FROM CAR WHERE MILEAGE>276564.828; --Średni przebieg
--4. Samochody naprawione przez konkretne firmy
SELECT CAR.* FROM CAR
    JOIN DAMAGE ON CAR.ID=DAMAGE.CAR_ID
    JOIN INVOICE ON DAMAGE.INVOICE_ID=INVOICE.ID
    JOIN COMPANY ON INVOICE.COMPANY_ID=COMPANY.ID
WHERE COMPANY.NAME IN ('Kanoodle', 'Avamm', 'Dabjam');
--5. Usuń stację 
--	-Przenies pracownika do innej stacji
UPDATE STATIONWORKER SET CAR_STATION_ID=1 WHERE CAR_STATION_ID=4; --Stacja z dwoma samochodami i trzema pracownikami
--	-Przenieś wszystkie samochody do innej stacji
UPDATE CAR SET CAR_STATION_ID=1 WHERE CAR_STATION_ID=4;
--	-Usuń stację
DELETE CARSTATION WHERE ID=4;
--6. Dodanie oceny do wypozyczenia wyzwala obliczenie nowej oceny dla samochodu, ktorego dotyczy wypozyczenie.
UPDATE RENTALHISTORY SET RATING=1 WHERE ID=462; --Wypożyczenie samochodu z dwoma wypożyczeniami
UPDATE CAR SET RATING=(
	SELECT AVG(RATING) FROM RENTALHISTORY WHERE CAR_ID=(SELECT CAR_ID FROM RENTALHISTORY WHERE ID=462)
) WHERE ID=(SELECT CAR_ID FROM RENTALHISTORY WHERE ID=462);
--7. Uzytkownicy ktorzy wypozyczyli samochod w okreslonym przedziale czasowym w okreslonym miescie.
ALTER session set NLS_DATE_FORMAT='DD/MM/YYYY';
SELECT SYSTEMUSER.* FROM SYSTEMUSER
    JOIN RENTALHISTORY ON SYSTEMUSER.ID=RENTALHISTORY.USER_ID
    JOIN CARSTATION ON RENTALHISTORY.START_STATION_ID=CARSTATION.ID
    JOIN LOCATION ON CARSTATION.LOCATION_ID=LOCATION.ID
WHERE RENTALHISTORY.START_DATE BETWEEN '01/01/2017' AND '31/12/2017' AND LOCATION.CITY='Asahi';
--8. Uzytkownicy ktorzy spowodowali wiecej szkod niz przychodu
SELECT PAYMENTS.ID, PAYMENTS.DOCUMENT_TYPE_ID, PAYMENTS.TITLE, PAYMENTS.NAME, PAYMENTS.SURNAME, PAYMENTS.EMAIL, PAYMENTS.PHONE FROM (
    SELECT SYSTEMUSER.ID, SYSTEMUSER.DOCUMENT_TYPE_ID, SYSTEMUSER.TITLE, SYSTEMUSER.NAME, SYSTEMUSER.SURNAME, SYSTEMUSER.EMAIL, SYSTEMUSER.PHONE, NVL(SUM(PAYMENT.COST*(100-PAYMENT.DISCOUNT)), 0) AS SUM FROM SYSTEMUSER
        LEFT JOIN RENTALHISTORY ON SYSTEMUSER.ID=RENTALHISTORY.USER_ID
        LEFT JOIN PAYMENT ON RENTALHISTORY.PAYMENT_ID=PAYMENT.ID
    GROUP BY SYSTEMUSER.ID, SYSTEMUSER.DOCUMENT_TYPE_ID, SYSTEMUSER.TITLE, SYSTEMUSER.NAME, SYSTEMUSER.SURNAME, SYSTEMUSER.EMAIL, SYSTEMUSER.PHONE
) PAYMENTS JOIN (
    SELECT SYSTEMUSER.ID, NVL(SUM(INVOICE.SUMMARY_COST), 0) AS SUM FROM SYSTEMUSER
        LEFT JOIN RENTALHISTORY ON SYSTEMUSER.ID=RENTALHISTORY.USER_ID
        LEFT JOIN DAMAGE ON RENTALHISTORY.ID=DAMAGE.RENTAL_ID
        LEFT JOIN INVOICE ON DAMAGE.INVOICE_ID=INVOICE.ID
    GROUP BY SYSTEMUSER.ID
) DAMAGES ON PAYMENTS.ID=DAMAGES.ID WHERE DAMAGES.SUM>PAYMENTS.SUM;

COMMIT;
EXIT;